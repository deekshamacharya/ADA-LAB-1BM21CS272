#include<stdio.h>
int max(int a , int b){
return (a > b) ? a : b ;
}

int knapsack(int W , int weight[],  int value[], int n)
{
int dp[n+1][W+1];
for(int i=0;i<=n;i++){
for(int w=0;w<=W;w++){
if(i==0||w==0){
dp[i][w]=0;
}
else if(weight[i-1]<=w){
dp[i][w]=max(value[i-1]+dp[i-1][w-weight[i-1]],dp[i-1][w]);}
else{
dp[i][w]=dp[i-1][w];
}
}
}
return  dp[n][W];
}
int main()
{
    int n;
    

printf("enter the number of items");
scanf("%d",&n);

int weight[n],value[n];


for(int i=0;i<n;i++){
printf("enter the weight of [%d]",i);
scanf("%d",&weight[i]);
printf("enter the value of [%d]",i);
scanf("%d",&value[i]);}

int capacity;
printf("enter the capacity");
scanf("%d",&capacity);

int max_value = knapsack(capacity, weight, value, n);
    printf("The maximum value that can be obtained: %d\n", max_value);

return 0;
}


